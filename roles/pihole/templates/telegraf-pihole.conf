[[inputs.http]]
  urls = [
    "http://localhost:8080/admin/api.php",
    "http://localhost:8080/admin/api.php?version",
    "http://localhost:8080/admin/api.php?getQueryTypes&auth={{ pihole_api_key }}",
    "http://localhost:8080/admin/api.php?topClients=25&auth={{ pihole_api_key }}",
    "http://localhost:8080/admin/api.php?getForwardDestinations&auth={{ pihole_api_key }}"
  ]
  name_suffix = "_pihole"
  data_format = "json"
  interval = "10m"
  tagexclude = ["url"]

[[inputs.http]]
  urls = [
    "http://localhost:8080/admin/api.php?topItems=25&auth={{ pihole_api_key }}"
  ]
  name_suffix = "_top_pihole"
  data_format = "json"
  interval = "10m"
  tagexclude = ["url"]

[[processors.starlark]]
  namepass = ['http_top_pihole']
  source = '''
def apply(metric):
   adsMetric = Metric("http_top_pihole")
   adsMetric.tags["type"] = "ads"
   adsMetric.time = metric.time
   for k, v in metric.fields.items():
      if k.startswith("top_ads"):
         fieldName = k.replace("top_ads_","")
         adsMetric.fields[fieldName] = v

   queriesMetric = Metric("http_top_pihole")
   queriesMetric.tags["type"] = "queries"
   queriesMetric.time = metric.time
   for k, v in metric.fields.items():
      if k.startswith("top_queries"):
         fieldName = k.replace("top_queries_","")
         queriesMetric.fields[fieldName] = v
   return [adsMetric, queriesMetric]
'''

[[inputs.http]]
  urls = [
    "http://localhost:8080/admin/api.php?overTimeData10mins"
  ]
  name_suffix = "_overTimeData10mins_pihole"
  data_format = "json"
  interval = "10m"
  tagexclude = ["url"]

[[processors.starlark]]
  namepass = ['http_overTimeData10mins_pihole']
  source = '''
def apply(metric):
   metrics = []
   for k, v in metric.fields.items():
      type, ts = k.rsplit("_", 1)
      m = Metric(metric.name)
      m.time = int(ts) * 1000000000
      m.fields["count"] = v
      m.tags["type"] = type
      metrics.append(m)
   return metrics
 '''